# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [main]
    tags: ["**"]
  pull_request:
    branches: [main, develop]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: .env
        run: php -r "copy('.env.ci', '.env');"

      - name: Cache build assets
        id: cache-assets
        uses: actions/cache@v2
        env:
          cache-name: cache-assets
        with:
          path: ./public
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8"
      - name: PHP vendor Cache
        id: cache-vendor
        uses: actions/cache@v2
        with:
          path: ./vendor
          key: ${{ runner.os }}-cache-vendor-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-vendor-
      - name: Composer Install
        if: steps.cache-vendor.outputs.cache-hit != 'true'
        run: composer install

      - name: install makeobj dependencies
        run: sudo wget -P /lib/x86_64-linux-gnu/ https://misc.128-bit.net/file/lib/libpng12.so.0 && sudo chmod 777 /lib/x86_64-linux-gnu/libpng12.so.0

      - name: chmod 777
        run: chmod -R 0777 ./
      - name: Test
        run: php artisan test -v --env=local

      - name: Display Error Log
        if: always()
        run: "[ -e storage/logs/laravel.log ] && cat storage/logs/laravel.log || echo 'no log file.'"

  deploy:
    # tag push -> テスト通過後デプロイ
    needs: test
    if: ${{ success() && startsWith( github.ref, 'refs/tags/' ) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: .env
        run: php -r "copy('.env.deploy', '.env');"

      - name: Install SSH key
        run: mkdir -p ~/.ssh \
          && echo "${{secrets.SSH_KEY}}" > ~/.ssh/id_rsa \
          && chmod 0600 ~/.ssh/id_rsa \
          && echo "${{secrets.KNOWN_HOSTS}}" >> ~/.ssh/known_hosts
      - name: Deploy
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: cd ${{ secrets.APP_DIR }}
            && git fetch -p
            && git checkout ${{ github.ref }}
            && sed -i "s/APP_VERSION=.*/APP_VERSION=$( git describe --tags )/" .env
            && composer install --optimize-autoloader --no-dev
            && php artisan optimize
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          privateKey: /home/runner/.ssh/id_rsa
